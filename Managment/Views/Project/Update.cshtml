@using Management.Common.Enum;
@model Management.Common.Models.DTO.ProjectDto;
@{
    ViewBag.Statuses = new SelectList(Enum.GetValues(typeof(Status)));
}
@{
    Layout = "_accountLayout";
}
@{
    var techStackNames = ViewBag.TechStackNames as List<SelectListItem> ?? new List<SelectListItem>();
    var selectedTechStackNames = ViewBag.SelectedTechStackNames as List<SelectListItem> ?? new List<SelectListItem>();
    var logoUrl = ViewBag.Logo;

    var documentation = ViewBag.Documentation;
    var snapShootUrl = ViewBag.SnapShoot;

}
<head>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/bootstrap.tagsinput/0.4.2/bootstrap-tagsinput.css" />

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/habibmhamadi/multi-select-tag@2.0.1/dist/css/multi-select-tag.css">

</head>


<h1>Update Project here</h1>

<form id="formData">
    <div class="form-group">
        <label asp-for="Logo"></label>
        <br />
        <input id="FileUpload1" class="btn btn-secondary" value="ViewBag.Logo" type="file" asp-for="Logo" />
        @if (ViewBag.Logo != null)
        {
            <p>Selected Logo: <a href="@ViewBag.Logo" target="_blank">@ViewBag.Logo</a></p>
        }
        <input id="ProjectId" hidden type="text" asp-for="ProjectId" />

    </div>

    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" id="Name" class="form-control" value="@Model.Name" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <label asp-for="Developers">Developers</label>
    <select asp-for="Developers"  class="form-control" name="Developers" type="text" id="DevTags" multiple>
        @{
            var selectedValuess = Model.Developers
            .SelectMany(ts => ts.Split(","))
            .ToList();

            var exeUsers = ViewBag.Users;

            foreach (var dev in exeUsers)
            {
                if (selectedValuess.Any(x => x == dev.Text))
                {
                    <option value="@dev.Value" selected="true">@dev.Text</option>
                }
                else
                {
                    <option value="@dev.Value">@dev.Text</option>
                }
            }
        }
    </select>


    <div class="form-group">
        <label asp-for="StartDate"></label>
        <input type="date" asp-for="StartDate" id="StartDate" class="form-control" value="@Model.StartDate.ToString("yyyy-MM-dd")" />
        <span asp-validation-for="StartDate" class="text-danger"></span>
    </div>

    
    <label asp-for="Status"></label>
    @Html.DropDownListFor(model => model.Status, ViewBag.Statuses as SelectList, new { @class = "form-control" })



    <div class="form-group">
        <label asp-for="Description "></label>
        <input asp-for="Description " id="Description" class="form-control" value="@Model.Description" />
        <span asp-validation-for="Description " class="text-danger"></span>
    </div>


    <label asp-for="TechStackUsed">TechStackUsed</label>
    <select asp-for="TechStackUsed" class="form-control" name="TechStackUsed" type="text" id="txttags" data-role="tagsinput" multiple>
        @{
            var selectedValues = Model.TechStackUsed
            .SelectMany(ts => ts.Split(","))
            .ToList();

            foreach (var techStack in selectedValues)
            {
               <option value="@techStack" selected="true">@techStack</option>
            }
        }
    </select>



    <div class="form-group">
        <label asp-for="Documentation"></label>
        <br />
        <input id="FileUpload2" class="btn btn-secondary" type="file" asp-for="Documentation" />
        @if (ViewBag.Documentation != null)
        {
            <p>Selected Documentation: <a href="@ViewBag.Documentation" target="_blank">@ViewBag.Documentation</a>
                <button type="button" class="close" aria-label="Close" onclick="deleteDocumentation('@ViewBag.Documentation')">
                    <span aria-hidden="true">&times;</span>
                </button>
            </p>
        }
    </div>

    <div class="form-group">
        <label asp-for="SnapShoots"></label>
        <br />
        <input id="FileUpload3" class="btn btn-secondary" type="file" asp-for="SnapShoots" multiple />
        @if (ViewBag.SnapShoot != null)
        {
            foreach (var item in ViewBag.SnapShoot)
            {
                <p>Selected SnapShoot: <a href="@item" target="_blank">@item</a>
                    <button type="button" class="close" aria-label="Close" onclick="deleteSnapShoot('@item')">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </p>
            }
        }
    </div>

    <div class="form-group">
        <label asp-for="DevelopmentName  "></label>
        <input asp-for="DevelopmentName  " id="DevelopmentName" class="form-control" value="@Model.DevelopmentName" />
        <span asp-validation-for="DevelopmentName  " class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="DevelopmentUrl  "></label>
        <input asp-for="DevelopmentUrl  " id="DevelopmentUrl" class="form-control" value="@Model.DevelopmentUrl" />
        <span asp-validation-for="DevelopmentUrl  " class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="StageName  "></label>
        <input asp-for="StageName  " id="StageName" class="form-control" value="@Model.StageName" />
        <span asp-validation-for="StageName  " class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="StageUrl   "></label>
        <input asp-for="StageUrl   " id="StageUrl" class="form-control" value="@Model.StageUrl" />
        <span asp-validation-for="StageUrl   " class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="ProductionName   "></label>
        <input asp-for="ProductionName   " id="ProductionName" class="form-control" value="@Model.ProductionName" />
        <span asp-validation-for="ProductionName   " class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="ProductionUrl   "></label>
        <input asp-for="ProductionUrl   " id="ProductionUrl" class="form-control" value="@Model.ProductionUrl" />
        <span asp-validation-for="ProductionUrl   " class="text-danger"></span>
    </div>
    <br />
    <button id="submitBtn" type="button" class="btn btn-primary">Update</button>
</form>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/bootstrap.tagsinput/0.4.2/bootstrap-tagsinput.min.js"></script>

<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>

<script src="https://cdn.jsdelivr.net/gh/habibmhamadi/multi-select-tag@2.0.1/dist/js/multi-select-tag.js"></script>

<script>
    new MultiSelectTag('DevTags')

</script>

<script>
    let existingSnapShoots = @Html.Raw(Json.Serialize(ViewBag.SnapShoot));
    let existingDocuments = @Html.Raw(Json.Serialize(ViewBag.Documentation));

    let deletedSnapShoots = [];
    let deletedDocuments = [];

    function deleteDocumentation(documentPath) {
        debugger;

        deletedDocuments.push(documentPath);
        $(`p:contains('${documentPath}')`).remove();


        console.log('Document removed from UI');
        console.log(existingDocuments);
    }

    function deleteSnapShoot(snapShootPath) {
        debugger;

        deletedSnapShoots.push(snapShootPath);
        $(`p:contains('${snapShootPath}')`).remove();

        existingSnapShoots.splice(existingSnapShoots.indexOf(snapShootPath), 1);
        
        console.log('SnapShoot removed from UI and existingSnapShoots!');
        console.log(existingSnapShoots);

    }

    $('#submitBtn').on('click', function (e) {
        const formData = new FormData(document.getElementById('formData')); // Get form data
        debugger;
        var newFormData = new FormData();

        var ProjectId = document.getElementById("ProjectId").value;
        var Logo = document.getElementById("FileUpload1").files[0];
        var Name = document.getElementById('Name').value;
        var StartDate = document.getElementById('StartDate').value;
        var Status = formData.get('Statuses');
        var Description = document.getElementById('Description').value;
        var TechStackUsed = $("#txttags option:selected").map(function () {
            return $(this).val();
        }).get();
        var Documentation = document.getElementById('FileUpload2').files[0];
        // var SnapShoots = document.getElementById('FileUpload3').files[0];


        const SnapShoots = document.getElementById("FileUpload3").files;
        for (let i = 0; i < SnapShoots.length; i++) {
            newFormData.append("SnapShoots", SnapShoots[i]);
        }

        var DevelopmentName = document.getElementById('DevelopmentName').value;
        var DevelopmentUrl = document.getElementById('DevelopmentUrl').value;
        var StageName = document.getElementById('StageName').value;
        var StageUrl = document.getElementById('StageUrl').value;
        var ProductionName = document.getElementById('ProductionName').value;
        var ProductionUrl = document.getElementById('ProductionUrl').value;
        var Developers = Array.from(document.getElementById('DevTags').selectedOptions).map(option => option.value);

        debugger;

        newFormData.append("ProjectId", ProjectId);
        newFormData.append("Logo", Logo);
        newFormData.append("Name", Name);
        newFormData.append("StartDate", StartDate);
        newFormData.append("Status", Status);
        newFormData.append("Description", Description);
        newFormData.append("TechStackUsed", TechStackUsed);
        newFormData.append("Documentation", Documentation);
        // newFormData.append("SnapShoots", SnapShoots);
        newFormData.append("DevelopmentName", DevelopmentName);
        newFormData.append("DevelopmentUrl", DevelopmentUrl);
        newFormData.append("StageName", StageName);
        newFormData.append("StageUrl", StageUrl);
        newFormData.append("ProductionName", ProductionName);
        newFormData.append("ProductionUrl", ProductionUrl);
        newFormData.append("DeletedSnapShoots", deletedSnapShoots);
        newFormData.append("DeletedDocuments", deletedDocuments);
        newFormData.append("Developers", Developers);

        debugger;

        $.ajax({
            url: '/Project/UpdateProject',
            method: 'POST',
            data: newFormData,
            contentType: false,
            processData: false,
            success: function (data) {
                console.log('Data submitted successfully!', data);
                debugger;
                setTimeout(() => {
                    var redirectUrl = "https://localhost:7222/Project/Index";
                    window.location.href = redirectUrl;
                }, 1000)
            },
            error: function (error) {
                console.error('Error submitting data:', error);
            }
        });
    });

</script>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
