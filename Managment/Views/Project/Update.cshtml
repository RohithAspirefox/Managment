@using Management.Common.Enum;
@model Management.Common.Models.DTO.ProjectDto;

@{
    Layout = "_accountLayout";
    ViewBag.Statuses = new SelectList(Enum.GetValues(typeof(Status)));
    var users = ViewBag.Users;
    var techStackNames = ViewBag.TechStackNames as List<SelectListItem> ?? new List<SelectListItem>();
    var selectedTechStackNames = ViewBag.SelectedTechStackNames as List<SelectListItem> ?? new List<SelectListItem>();
    var logoUrl = ViewBag.Logo;

    var documentation = ViewBag.Documentation;
    var snapShootUrl = ViewBag.SnapShoot;
    <script src="https://cdn.jsdelivr.net/npm/@@yaireo/tagify"></script>
    <script src="https://cdn.jsdelivr.net/npm/@@yaireo/tagify/dist/tagify.polyfills.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/@@yaireo/tagify/dist/tagify.css" rel="stylesheet" type="text/css" />
}


<head>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/bootstrap.tagsinput/0.4.2/bootstrap-tagsinput.css" />

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/habibmhamadi/multi-select-tag@2.0.1/dist/css/multi-select-tag.css">

</head>


<h1>Update Project here</h1>

<div class="container-fluid" style="margin-top: 50px;">
    <div class="container-fluid" style="border: 2px solid #ccc; padding: 20px; border-radius: 10px; background-color: #FFFDF9;">
        <form id="formData">
            <div class="col-md-12 mb-4" style="margin-top: 55px;">
                <div class="row no-gutters" style="margin-top: -50px;margin-bottom: 40px;">
                    <div class="col-4 mt-2">
                        <div class="form-group">
                            <label asp-for="Logo"></label>
                            <br />
                            <input id="FileUpload1" class="btn btn-secondary" value="ViewBag.Logo" type="file" asp-for="Logo" />
                            @if (ViewBag.Logo != null)
                            {
                                <p>Selected Document:</p>
                                <p>
                                    <img target="_blank" src="@ViewBag.Logo" style=" height: 124px; width: 125px;">
                                    <button type="button" class="close" aria-label="Close" onclick="deleteLogo('@ViewBag.Logo')">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </p>

                            }
                            <input id="ProjectId" hidden type="text" asp-for="ProjectId" />

                        </div>

                        <div class="form-group">
                            <label asp-for="Name"></label>
                            <input asp-for="Name" id="Name" class="form-control" value="@Model.Name" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <label asp-for="Developers">Developers</label>
                        <select asp-for="Developers" class="form-control" name="Developers" type="text" id="DevTags" multiple>
                            @{
                                var selectedValuess = Model.Developers
                                .SelectMany(ts => ts.Split(","))
                                .ToList();

                                var exeUsers = ViewBag.Users;

                                foreach (var dev in exeUsers)
                                {
                                    if (selectedValuess.Any(x => x == dev.Text))
                                    {
                                        <option value="@dev.Value" selected="true">@dev.Text</option>
                                    }
                                    else
                                    {
                                        <option value="@dev.Value">@dev.Text</option>
                                    }
                                }
                            }
                        </select>


                        <div class="form-group">
                            <label asp-for="StartDate"></label>
                            <input type="date" asp-for="StartDate" id="StartDate" class="form-control" value="@Model.StartDate.ToString("yyyy-MM-dd")" />
                            <span asp-validation-for="StartDate" class="text-danger"></span>
                        </div>


                        <label asp-for="Status"></label>
                        @Html.DropDownListFor(model => model.Status, ViewBag.Statuses as SelectList, new { @class = "form-control" })



                        <div class="form-group">
                            <label asp-for="Description "></label>
                            <input asp-for="Description " id="Description" class="form-control" value="@Model.Description" />
                            <span asp-validation-for="Description " class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-4 mt-2">
                        <label asp-for="TechStackUsed">TechStackUsed</label>
                        <input name='input-custom-dropdown' class='some_class_name' placeholder='write some tags' value=''>




                        <div class="form-group">
                            <label asp-for="Documentation"></label>
                            <br />
                            <input id="FileUpload2" class="btn btn-secondary" type="file" asp-for="Documentation" />
                            @if (ViewBag.Documentation != null)
                            {
                                <p>Selected Document:</p>
                                <p>
                                    
                                    <img target="_blank" src="@Model.DocumentationUrl" style=" height: 124px; width: 125px;margin-top: 10px;">
                                    <button type="button" class="close" aria-label="Close" onclick="deleteDocumentation('@Model.DocumentationUrl')">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </p>
                            }
                        </div>

                        <div class="form-group">
                            <label asp-for="SnapShoots"></label>
                            <br />
                            <input id="FileUpload3" class="btn btn-secondary" type="file" asp-for="SnapShoots" multiple />
                            @if (ViewBag.SnapShoot != null)
                            {
                                <p>Selected SnapShoot:</p>

                                foreach (var item in ViewBag.SnapShoot)
                                {
                                    <div class="col-5">
                                        <img target="_blank" src="@item" style=" height: 124px; width: 125px;">
                                        <button type="button" class="close" aria-label="Close" onclick="deleteSnapShoot('@item')">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                }

                            }
                        </div>
                    </div>

                    <div class="col-4 mt-2">
                        <div class="form-group">
                            <label asp-for="DevelopmentName  "></label>
                            <input asp-for="DevelopmentName  " id="DevelopmentName" class="form-control" value="@Model.DevelopmentName" />
                            <span asp-validation-for="DevelopmentName  " class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="DevelopmentUrl  "></label>
                            <input asp-for="DevelopmentUrl  " id="DevelopmentUrl" class="form-control" value="@Model.DevelopmentUrl" />
                            <span asp-validation-for="DevelopmentUrl  " class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="StageName  "></label>
                            <input asp-for="StageName  " id="StageName" class="form-control" value="@Model.StageName" />
                            <span asp-validation-for="StageName  " class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="StageUrl   "></label>
                            <input asp-for="StageUrl   " id="StageUrl" class="form-control" value="@Model.StageUrl" />
                            <span asp-validation-for="StageUrl   " class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="ProductionName   "></label>
                            <input asp-for="ProductionName   " id="ProductionName" class="form-control" value="@Model.ProductionName" />
                            <span asp-validation-for="ProductionName   " class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="ProductionUrl   "></label>
                            <input asp-for="ProductionUrl   " id="ProductionUrl" class="form-control" value="@Model.ProductionUrl" />
                            <span asp-validation-for="ProductionUrl   " class="text-danger"></span>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-lg-6">
                            <button style="width:100%" id="cancelBtn" style="border-radius:10px;margin-top:12px; padding:10px;margin-bottom:-40px;" type="button" class="btn btn-secondary">Cancel</button>
                        </div>
                        <div class="col-lg-6">
                            <button style="width:100%" id="submitBtn" style="border-radius:10px;padding:10px;" class="btn btn-primary" type="button">Update</button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/bootstrap.tagsinput/0.4.2/bootstrap-tagsinput.min.js"></script>

<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>

<script src="https://cdn.jsdelivr.net/gh/habibmhamadi/multi-select-tag@2.0.1/dist/js/multi-select-tag.js"></script>

<script>
    new MultiSelectTag('DevTags')

</script>

<script>
    debugger;
    document.getElementById("cancelBtn").addEventListener("click", function () {
        debugger;
        window.location.href = "/Project/ListView";
    });

    var input = document.querySelector('input[name="input-custom-dropdown"]'),
        tagify = new Tagify(input, {
            whitelist: ["Dotnet", "React", "Angular"],
            maxTags: 10,
            dropdown: {
                maxItems: 20,
                classname: "tags-look",
                enabled: 0,
                closeOnSelect: false
            }
        })

    var list = @Html.Raw(Json.Serialize(ViewBag.TechStackNames.Items));
    tagify.addTags(list);
    console.log(list + "list");
    debugger;

    input.addEventListener('change', onChange)

    var values;
    function onChange(e) {
        try {
            var parsedValues = JSON.parse(e.target.value);
            values = parsedValues.map(obj => obj.value);
            console.log(values);
        } catch (error) {
            console.error("Error parsing JSON:", error);
        }
    }

    let existingSnapShoots = @Html.Raw(Json.Serialize(ViewBag.SnapShoot));
    let existingDocuments = @Html.Raw(Json.Serialize(ViewBag.Documentation));
    let existingLogo = @Html.Raw(Json.Serialize(ViewBag.Logo));

    let deletedSnapShoots = [];
    let deletedDocuments = [];
    let deletedLogo = [];


    function deleteLogo(documentPath) {
        debugger;

        deletedLogo.push(documentPath);
        $(`img[src='${documentPath}']`).closest('p').remove();


        console.log('Logo removed from UI');
        console.log(existingLogo);
    }

    function deleteDocumentation(documentPath) {
        debugger;

        deletedDocuments.push(documentPath);
        $(`img[src='${documentPath}']`).closest('p').remove();


        console.log('Document removed from UI');
        console.log(existingDocuments);
    }

    function deleteSnapShoot(snapShootPath) {
        debugger;

        deletedSnapShoots.push(snapShootPath);
        $(`img[src='${documentPath}']`).closest('p').remove();

        existingSnapShoots.splice(existingSnapShoots.indexOf(snapShootPath), 1);

        console.log('SnapShoot removed from UI and existingSnapShoots!');
        console.log(existingSnapShoots);

    }

    $('#submitBtn').on('click', function (e) {
        const formData = new FormData(document.getElementById('formData')); // Get form data
        debugger;
        var newFormData = new FormData();

        var ProjectId = document.getElementById("ProjectId").value;
        var Logo = document.getElementById("FileUpload1").files[0];
        var Name = document.getElementById('Name').value;
        var StartDate = document.getElementById('StartDate').value;
        var Status = formData.get('Statuses');
        var Description = document.getElementById('Description').value;
        var TechStackUsed = values;

        // var TechStackUsed = $("#txttags option:selected").map(function () {
        //     return $(this).val();
        // }).get();
        var Documentation = document.getElementById('FileUpload2').files[0];
        // var SnapShoots = document.getElementById('FileUpload3').files[0];


        const SnapShoots = document.getElementById("FileUpload3").files;
        for (let i = 0; i < SnapShoots.length; i++) {
            newFormData.append("SnapShoots", SnapShoots[i]);
        }

        var DevelopmentName = document.getElementById('DevelopmentName').value;
        var DevelopmentUrl = document.getElementById('DevelopmentUrl').value;
        var StageName = document.getElementById('StageName').value;
        var StageUrl = document.getElementById('StageUrl').value;
        var ProductionName = document.getElementById('ProductionName').value;
        var ProductionUrl = document.getElementById('ProductionUrl').value;
        var Developers = Array.from(document.getElementById('DevTags').selectedOptions).map(option => option.value);

        debugger;

        newFormData.append("ProjectId", ProjectId);
        newFormData.append("Logo", Logo);
        newFormData.append("Name", Name);
        newFormData.append("StartDate", StartDate);
        newFormData.append("Status", Status);
        newFormData.append("Description", Description);
        newFormData.append("TechStackUsed", TechStackUsed);
        newFormData.append("Documentation", Documentation);
        // newFormData.append("SnapShoots", SnapShoots);
        newFormData.append("DevelopmentName", DevelopmentName);
        newFormData.append("DevelopmentUrl", DevelopmentUrl);
        newFormData.append("StageName", StageName);
        newFormData.append("StageUrl", StageUrl);
        newFormData.append("ProductionName", ProductionName);
        newFormData.append("ProductionUrl", ProductionUrl);
        newFormData.append("DeletedSnapShoots", deletedSnapShoots);
        newFormData.append("DeletedDocuments", deletedDocuments);
        newFormData.append("DeletedLogo", deletedLogo);
        newFormData.append("Developers", Developers);

        debugger;

        $.ajax({
            url: '/Project/UpdateProject',
            method: 'POST',
            data: newFormData,
            contentType: false,
            processData: false,
            success: function (data) {
                console.log('Data submitted successfully!', data);
                debugger;
                setTimeout(() => {
                    var redirectUrl = "https://localhost:7222/Project/ListView";
                    window.location.href = redirectUrl;
                }, 1000)
            },
            error: function (error) {
                console.error('Error submitting data:', error);
            }
        });
    });

</script>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
